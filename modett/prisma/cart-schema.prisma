// Prisma schema for Cart module
// Place this in your prisma/schema.prisma under the appropriate schema (e.g., public or cart)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["product_catalog", "public", "user_management", "cart"]
}

// Shopping Cart Table
model ShoppingCart {
  id                  String      @id @default(dbgenerated("gen_random_uuid()")) @map("cart_id") @db.Uuid
  userId              String?     @map("user_id") @db.Uuid
  guestToken          String?     @map("guest_token")
  currency            String
  reservationExpiresAt DateTime?  @map("reservation_expires_at") @db.Timestamptz(6)
  createdAt           DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  items               CartItem[]

  @@map("shopping_carts")
  @@schema("cart")
}

// Cart Item Table
model CartItem {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @map("cart_item_id") @db.Uuid
  cartId         String   @map("cart_id") @db.Uuid
  variantId      String   @map("variant_id")
  quantity       Int
  unitPrice      Decimal  @map("unit_price") @db.Decimal(12, 2)
  appliedPromos  Json     @map("applied_promos")
  isGift         Boolean  @default(false) @map("is_gift")
  giftMessage    String?  @map("gift_message")
  cart           ShoppingCart @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("cart_items")
  @@schema("cart")
}

// Reservation Table
model Reservation {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @map("reservation_id") @db.Uuid
  cartId      String   @map("cart_id") @db.Uuid
  variantId   String   @map("variant_id")
  quantity    Int
  expiresAt   DateTime @map("expires_at") @db.Timestamptz(6)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  cart        ShoppingCart @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("reservations")
  @@schema("cart")
}
