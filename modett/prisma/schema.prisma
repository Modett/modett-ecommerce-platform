generator client{
    provider="prisma-client-js"
}

datasource db{
    provider="postgresql"
    url=env("postgresql://postgres:JackCM%403003@localhost:5432/modett_ecommerce")
}

enum UserStatus{
    active
    inactive
    blocked
}

model User{
    id  String @id @default(dbgenerated("gen_random_uuid()")) @db.uuid
    email String @unique
    passwordHash String? @map("password_hash")
    phone String?
    status UserStatus @default(active)
    emailVerified Boolean @default(false) @map("email_verified")
    phoneVerified Boolean @default(false) @map("phone_verified")
    isGuest Boolean @default(false) @map("is_guest")
    createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
    updatedAt DateTime @map("updated_at") @db.TimeStamptz

    // Relations
    socialLogins SocialLogin[]
    addresses UserAddress[]
    paymentMethods PaymentMethod[]
    profile UserProfile?

    @@map("users")
    @@schema("user_management")
}

model SocialLogin {
    id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid @map("social_id")
    userId         String   @map("user_id") @db.Uuid
    provider       String
    providerUserId String   @unique @map("provider_user_id")
    createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("social_logins")
    @@schema("user_management")
}

model UserAddress {
    id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid @map("address_id")
    userId       String   @map("user_id") @db.Uuid
    type         String   // 'billing' or 'shipping'
    isDefault    Boolean  @default(false) @map("is_default")
    firstName    String?  @map("first_name")
    lastName     String?  @map("last_name")
    company      String?
    addressLine1 String   @map("address_line_1")
    addressLine2 String?  @map("address_line_2")
    city         String
    state        String?
    postalCode   String?  @map("postal_code")
    country      String
    phone        String?
    createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz
    updatedAt    DateTime @updatedAt @map("updated_at") @db.Timestamptz

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("user_addresses")
    @@schema("user_management")
}

